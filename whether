package com.tharavadinnov.weatherapp;

import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.KeyEvent;
import android.view.inputmethod.EditorInfo;
import android.widget.EditText;
import android.widget.TextView;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.util.Objects;

import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

public class MainActivity extends AppCompatActivity {
    EditText cityEt;
    TextView textView;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        cityEt = findViewById(R.id.city);
        textView= findViewById(R.id.textView);
        cityEt.setOnEditorActionListener(new TextView.OnEditorActionListener() {
            public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {
                if ((event != null && (event.getKeyCode() == KeyEvent.KEYCODE_ENTER)) || (actionId == EditorInfo.IME_ACTION_DONE)) {

                    DownloadJson downloadJson = new DownloadJson();
                    downloadJson.execute("http://openweathermap.org/data/2.5/weather?q="+cityEt.getText().toString()+"&appid=b6907d289e10d714a6e88b30761fae22");

                    // submit.performClick(); for submit button here there is no submit button
                }
                return false;
            }
        });

    }

    class DownloadJson extends AsyncTask<String, String, String> {

        @Override
        protected String doInBackground(String... strings) {
            OkHttpClient client = new OkHttpClient();
            Request request = new Request.Builder()
                    .url(strings[0])
                    .build();

            Response response = null;
            try {
                response = client.newCall(request).execute();
                return response.body().string();
            } catch (IOException e) {
                e.printStackTrace();
                return "Something went Wrong";
            }
        }

        @Override
        protected void onPostExecute(String s) {
            super.onPostExecute(s);
            Log.i("Json", s);
            if (!Objects.equals(s, "Something went Wrong")) {
                try {
                    JSONObject jsonObject = new JSONObject(s);
                    Log.i("visibility", jsonObject.getString("visibility"));
                    
                    JSONObject main = jsonObject.getJSONObject("main");
                    Log.i("Pressure",main.getString("pressure"));
                    
                    String whetherInfo = jsonObject.getString("weather");
                    JSONArray array = new JSONArray(whetherInfo);
                    for (int i = 0; i < array.length(); i++) {
                        JSONObject jasonPart = array.getJSONObject(i);
                        Log.i("main", jasonPart.getString("main"));
                        textView.setText(jasonPart.getString("main"));
                        Log.i("description", jasonPart.getString("description"));
                    }

                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }
        }

    }
}
